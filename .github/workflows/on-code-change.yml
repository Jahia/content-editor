# This workflow is triggered every time a change is pushed to any branches
# Github actions command reference: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
name: On Code Change (PR)

# The workflow could also be triggered on PRs
on:
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-signature:
    name: Update module signature
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: jahia/jahia-modules-action/update-signature@v2
        with:
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}
          nexus_enterprise_releases_url: ${{ secrets.NEXUS_ENTERPRISE_RELEASES_URL }}

  static-analysis:
    name: Static Analysis (linting, vulns)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Jahia/jahia-modules-action/static-analysis@v2
        with:
          node_version: 14
          auditci_level: critical

  build:
    name: Build Module
    needs: update-signature
    runs-on: ubuntu-latest
    env:
      NEXUS_INTERNAL_URL: https://devtools.jahia.com/nexus/content/groups/internal/
    container:
      image: jahia/cimg-mvn-cache:ga_cimg_openjdk_8.0.312-node
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - uses: jahia/jahia-modules-action/build@v2
        with:
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}
          module_id: content-editor
          mvn_settings_filepath: '.github/maven.settings.xml'

  sonar-analysis:
    name: Sonar Analysis
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: jahia/jahia-modules-action/sonar-analysis@v2
        with:
          primary_release_branch: master
          github_pr_id: ${{github.event.number}}
          sonar_url: ${{ secrets.SONAR_URL }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          mvn_settings_filepath: '.github/maven.settings.xml'

  js-checks:
    name: Check Javascript dependencies and licenses
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: jahia/jahia-modules-action/dependencies-check-javascript@v2
        with:
          github_token: ${{ secrets.GH_API_TOKEN }}
          show_checklist: 'true'

  java-checks:
    name: Check Java dependencies and licenses
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: jahia/jahia-modules-action/dependencies-check-java@v2
        with:
          github_token: ${{ secrets.GH_API_TOKEN }}
          show_checklist: 'true'

  scribe-upload:
    name: Gensbom Image generate bom, upload to scribe
    needs: build
    steps:
      - uses: scribe-security/action-bom@master
        id: gensbom_dir
        with:    
          type: dir # To be included only if you want to to use docker daemon to access the image (for example, creating your docker image locally)
          target: /github/workspace/
          verbose: 2
          scribe-enable: true
          scribe-client-id: ${{ secrets.clientid }}
          scribe-client-secret: ${{ secrets.clientsecret }}
          product-key: ${{ secrets.productkey }}
      - uses: actions/upload-artifact@v3
        with:
          name: scribe-evidence
          path: |
            ${{ steps.gensbom_dir.outputs.OUTPUT_PATH }}

                